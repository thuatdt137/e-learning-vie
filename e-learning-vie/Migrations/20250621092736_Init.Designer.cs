// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using e_learning_vie.Models;

#nullable disable

namespace e_learning_vie.Migrations
{
    [DbContext(typeof(SchoolManagementContext))]
    [Migration("20250621092736_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.17")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("e_learning_vie.Models.AcademicYear", b =>
                {
                    b.Property<int>("AcademicYearId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("AcademicYearID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AcademicYearId"));

                    b.Property<DateOnly?>("EndDate")
                        .HasColumnType("date");

                    b.Property<DateOnly?>("StartDate")
                        .HasColumnType("date");

                    b.Property<string>("YearName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("AcademicYearId")
                        .HasName("PK__Academic__C54C7A218FDBFA0E");

                    b.ToTable("AcademicYears");
                });

            modelBuilder.Entity("e_learning_vie.Models.ActivityLog", b =>
                {
                    b.Property<int>("LogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("LogID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LogId"));

                    b.Property<string>("Action")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ChangeDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Details")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int?>("RecordId")
                        .HasColumnType("int")
                        .HasColumnName("RecordID");

                    b.Property<string>("TableName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.HasKey("LogId")
                        .HasName("PK__Activity__5E5499A86604819A");

                    b.HasIndex("UserId");

                    b.ToTable("ActivityLogs");
                });

            modelBuilder.Entity("e_learning_vie.Models.Aspiration", b =>
                {
                    b.Property<int>("AspirationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("AspirationID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AspirationId"));

                    b.Property<int?>("AcademicYearId")
                        .HasColumnType("int")
                        .HasColumnName("AcademicYearID");

                    b.Property<int?>("Priority")
                        .HasColumnType("int");

                    b.Property<int?>("StudentId")
                        .HasColumnType("int")
                        .HasColumnName("StudentID");

                    b.Property<int?>("TargetSchoolId")
                        .HasColumnType("int")
                        .HasColumnName("TargetSchoolID");

                    b.HasKey("AspirationId")
                        .HasName("PK__Aspirati__1C828934783E2DE7");

                    b.HasIndex("AcademicYearId");

                    b.HasIndex("StudentId");

                    b.HasIndex("TargetSchoolId");

                    b.ToTable("Aspirations");
                });

            modelBuilder.Entity("e_learning_vie.Models.Class", b =>
                {
                    b.Property<int>("ClassId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ClassID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClassId"));

                    b.Property<int?>("AcademicYearId")
                        .HasColumnType("int")
                        .HasColumnName("AcademicYearID");

                    b.Property<string>("ClassName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("SchoolId")
                        .HasColumnType("int")
                        .HasColumnName("SchoolID");

                    b.Property<int?>("TeacherId")
                        .HasColumnType("int")
                        .HasColumnName("TeacherID");

                    b.HasKey("ClassId")
                        .HasName("PK__Classes__CB1927A052B95F6D");

                    b.HasIndex("AcademicYearId");

                    b.HasIndex("SchoolId");

                    b.HasIndex("TeacherId");

                    b.ToTable("Classes");
                });

            modelBuilder.Entity("e_learning_vie.Models.Grade", b =>
                {
                    b.Property<int>("GradeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("GradeID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GradeId"));

                    b.Property<int?>("AcademicYearId")
                        .HasColumnType("int")
                        .HasColumnName("AcademicYearID");

                    b.Property<DateOnly?>("DateEntered")
                        .HasColumnType("date");

                    b.Property<double?>("Score")
                        .HasColumnType("float");

                    b.Property<int?>("StudentId")
                        .HasColumnType("int")
                        .HasColumnName("StudentID");

                    b.Property<int?>("SubjectId")
                        .HasColumnType("int")
                        .HasColumnName("SubjectID");

                    b.HasKey("GradeId")
                        .HasName("PK__Grades__54F87A370A2E8566");

                    b.HasIndex("AcademicYearId");

                    b.HasIndex("StudentId");

                    b.HasIndex("SubjectId");

                    b.ToTable("Grades");
                });

            modelBuilder.Entity("e_learning_vie.Models.Notification", b =>
                {
                    b.Property<int>("NotificationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("NotificationID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NotificationId"));

                    b.Property<int?>("AcademicYearId")
                        .HasColumnType("int")
                        .HasColumnName("AcademicYearID");

                    b.Property<string>("Content")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateOnly?>("DateSent")
                        .HasColumnType("date");

                    b.Property<string>("RecipientType")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("SchoolId")
                        .HasColumnType("int")
                        .HasColumnName("SchoolID");

                    b.HasKey("NotificationId")
                        .HasName("PK__Notifica__20CF2E32069E083C");

                    b.HasIndex("AcademicYearId");

                    b.HasIndex("SchoolId");

                    b.ToTable("Notifications");
                });

            modelBuilder.Entity("e_learning_vie.Models.Quota", b =>
                {
                    b.Property<int>("QuotaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("QuotaID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("QuotaId"));

                    b.Property<int?>("AcademicYearId")
                        .HasColumnType("int")
                        .HasColumnName("AcademicYearID");

                    b.Property<int?>("QuotaNumber")
                        .HasColumnType("int");

                    b.Property<int?>("SchoolId")
                        .HasColumnType("int")
                        .HasColumnName("SchoolID");

                    b.HasKey("QuotaId")
                        .HasName("PK__Quotas__AE96C9E2C2E85A39");

                    b.HasIndex("AcademicYearId");

                    b.HasIndex("SchoolId");

                    b.ToTable("Quotas");
                });

            modelBuilder.Entity("e_learning_vie.Models.Request", b =>
                {
                    b.Property<int>("RequestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RequestID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RequestId"));

                    b.Property<int?>("AcademicYearId")
                        .HasColumnType("int")
                        .HasColumnName("AcademicYearID");

                    b.Property<int?>("ApprovedBy")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<string>("Details")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("RequestType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Status")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("RequestId")
                        .HasName("PK__Requests__33A8519A9124A701");

                    b.HasIndex("AcademicYearId");

                    b.HasIndex("ApprovedBy");

                    b.HasIndex("CreatedBy");

                    b.ToTable("Requests");
                });

            modelBuilder.Entity("e_learning_vie.Models.Schedule", b =>
                {
                    b.Property<int>("ScheduleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ScheduleID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ScheduleId"));

                    b.Property<int?>("AcademicYearId")
                        .HasColumnType("int")
                        .HasColumnName("AcademicYearID");

                    b.Property<int?>("ClassId")
                        .HasColumnType("int")
                        .HasColumnName("ClassID");

                    b.Property<string>("DayOfWeek")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<TimeOnly?>("EndTime")
                        .HasColumnType("time");

                    b.Property<string>("Room")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<TimeOnly?>("StartTime")
                        .HasColumnType("time");

                    b.Property<int?>("SubjectId")
                        .HasColumnType("int")
                        .HasColumnName("SubjectID");

                    b.Property<int?>("TeacherId")
                        .HasColumnType("int")
                        .HasColumnName("TeacherID");

                    b.HasKey("ScheduleId")
                        .HasName("PK__Schedule__9C8A5B69B9784EF6");

                    b.HasIndex("AcademicYearId");

                    b.HasIndex("ClassId");

                    b.HasIndex("SubjectId");

                    b.HasIndex("TeacherId");

                    b.ToTable("Schedules");
                });

            modelBuilder.Entity("e_learning_vie.Models.School", b =>
                {
                    b.Property<int>("SchoolId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SchoolID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SchoolId"));

                    b.Property<string>("Address")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Phone")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.Property<int?>("PrincipalId")
                        .HasColumnType("int")
                        .HasColumnName("PrincipalID");

                    b.Property<string>("SchoolName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("SchoolType")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("SchoolId")
                        .HasName("PK__Schools__3DA4677B37F6A97C");

                    b.HasIndex("PrincipalId");

                    b.ToTable("Schools");
                });

            modelBuilder.Entity("e_learning_vie.Models.Student", b =>
                {
                    b.Property<int>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("StudentID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StudentId"));

                    b.Property<string>("Address")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("ClassId")
                        .HasColumnType("int")
                        .HasColumnName("ClassID");

                    b.Property<DateOnly?>("DateOfBirth")
                        .HasColumnType("date");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Phone")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.Property<int?>("SchoolId")
                        .HasColumnType("int")
                        .HasColumnName("SchoolID");

                    b.HasKey("StudentId")
                        .HasName("PK__Students__32C52A79E8FE8C3E");

                    b.HasIndex("ClassId");

                    b.HasIndex("SchoolId");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("e_learning_vie.Models.StudentClassHistory", b =>
                {
                    b.Property<int>("HistoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("HistoryID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HistoryId"));

                    b.Property<int?>("AcademicYearId")
                        .HasColumnType("int")
                        .HasColumnName("AcademicYearID");

                    b.Property<int?>("ClassId")
                        .HasColumnType("int")
                        .HasColumnName("ClassID");

                    b.Property<DateOnly?>("EndDate")
                        .HasColumnType("date");

                    b.Property<DateOnly?>("StartDate")
                        .HasColumnType("date");

                    b.Property<int?>("StudentId")
                        .HasColumnType("int")
                        .HasColumnName("StudentID");

                    b.HasKey("HistoryId")
                        .HasName("PK__StudentC__4D7B4ADDDD9E1FE5");

                    b.HasIndex("AcademicYearId");

                    b.HasIndex("ClassId");

                    b.HasIndex("StudentId");

                    b.ToTable("StudentClassHistory", (string)null);
                });

            modelBuilder.Entity("e_learning_vie.Models.Subject", b =>
                {
                    b.Property<int>("SubjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SubjectID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SubjectId"));

                    b.Property<string>("SubjectName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("SubjectId")
                        .HasName("PK__Subjects__AC1BA38831BD67C9");

                    b.ToTable("Subjects");
                });

            modelBuilder.Entity("e_learning_vie.Models.Teacher", b =>
                {
                    b.Property<int>("TeacherId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("TeacherID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TeacherId"));

                    b.Property<string>("Address")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateOnly?>("DateOfBirth")
                        .HasColumnType("date");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Phone")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.Property<int?>("SchoolId")
                        .HasColumnType("int")
                        .HasColumnName("SchoolID");

                    b.HasKey("TeacherId")
                        .HasName("PK__Teachers__EDF25944207E57EB");

                    b.HasIndex("SchoolId");

                    b.ToTable("Teachers");
                });

            modelBuilder.Entity("e_learning_vie.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StudentId")
                        .HasColumnType("int");

                    b.Property<int?>("TeacherId")
                        .HasColumnType("int");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.HasIndex("StudentId");

                    b.HasIndex("TeacherId");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<int>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.HasOne("e_learning_vie.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.HasOne("e_learning_vie.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<int>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("e_learning_vie.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.HasOne("e_learning_vie.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("e_learning_vie.Models.ActivityLog", b =>
                {
                    b.HasOne("e_learning_vie.Models.User", "User")
                        .WithMany("ActivityLogs")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__ActivityL__UserI__5CD6CB2B");

                    b.Navigation("User");
                });

            modelBuilder.Entity("e_learning_vie.Models.Aspiration", b =>
                {
                    b.HasOne("e_learning_vie.Models.AcademicYear", "AcademicYear")
                        .WithMany("Aspirations")
                        .HasForeignKey("AcademicYearId")
                        .HasConstraintName("FK__Aspiratio__Acade__5070F446");

                    b.HasOne("e_learning_vie.Models.Student", "Student")
                        .WithMany("Aspirations")
                        .HasForeignKey("StudentId")
                        .HasConstraintName("FK__Aspiratio__Stude__4E88ABD4");

                    b.HasOne("e_learning_vie.Models.School", "TargetSchool")
                        .WithMany("Aspirations")
                        .HasForeignKey("TargetSchoolId")
                        .HasConstraintName("FK__Aspiratio__Targe__4F7CD00D");

                    b.Navigation("AcademicYear");

                    b.Navigation("Student");

                    b.Navigation("TargetSchool");
                });

            modelBuilder.Entity("e_learning_vie.Models.Class", b =>
                {
                    b.HasOne("e_learning_vie.Models.AcademicYear", "AcademicYear")
                        .WithMany("Classes")
                        .HasForeignKey("AcademicYearId")
                        .HasConstraintName("FK__Classes__Academi__2E1BDC42");

                    b.HasOne("e_learning_vie.Models.School", "School")
                        .WithMany("Classes")
                        .HasForeignKey("SchoolId")
                        .HasConstraintName("FK__Classes__SchoolI__300424B4");

                    b.HasOne("e_learning_vie.Models.Teacher", "Teacher")
                        .WithMany("Classes")
                        .HasForeignKey("TeacherId")
                        .HasConstraintName("FK__Classes__Teacher__2F10007B");

                    b.Navigation("AcademicYear");

                    b.Navigation("School");

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("e_learning_vie.Models.Grade", b =>
                {
                    b.HasOne("e_learning_vie.Models.AcademicYear", "AcademicYear")
                        .WithMany("Grades")
                        .HasForeignKey("AcademicYearId")
                        .HasConstraintName("FK__Grades__Academic__3E52440B");

                    b.HasOne("e_learning_vie.Models.Student", "Student")
                        .WithMany("Grades")
                        .HasForeignKey("StudentId")
                        .HasConstraintName("FK__Grades__StudentI__3C69FB99");

                    b.HasOne("e_learning_vie.Models.Subject", "Subject")
                        .WithMany("Grades")
                        .HasForeignKey("SubjectId")
                        .HasConstraintName("FK__Grades__SubjectI__3D5E1FD2");

                    b.Navigation("AcademicYear");

                    b.Navigation("Student");

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("e_learning_vie.Models.Notification", b =>
                {
                    b.HasOne("e_learning_vie.Models.AcademicYear", "AcademicYear")
                        .WithMany("Notifications")
                        .HasForeignKey("AcademicYearId")
                        .HasConstraintName("FK__Notificat__Acade__4BAC3F29");

                    b.HasOne("e_learning_vie.Models.School", "School")
                        .WithMany("Notifications")
                        .HasForeignKey("SchoolId")
                        .HasConstraintName("FK__Notificat__Schoo__4AB81AF0");

                    b.Navigation("AcademicYear");

                    b.Navigation("School");
                });

            modelBuilder.Entity("e_learning_vie.Models.Quota", b =>
                {
                    b.HasOne("e_learning_vie.Models.AcademicYear", "AcademicYear")
                        .WithMany("Quota")
                        .HasForeignKey("AcademicYearId")
                        .HasConstraintName("FK__Quotas__Academic__5441852A");

                    b.HasOne("e_learning_vie.Models.School", "School")
                        .WithMany("Quota")
                        .HasForeignKey("SchoolId")
                        .HasConstraintName("FK__Quotas__SchoolID__534D60F1");

                    b.Navigation("AcademicYear");

                    b.Navigation("School");
                });

            modelBuilder.Entity("e_learning_vie.Models.Request", b =>
                {
                    b.HasOne("e_learning_vie.Models.AcademicYear", "AcademicYear")
                        .WithMany("Requests")
                        .HasForeignKey("AcademicYearId")
                        .HasConstraintName("FK__Requests__Academ__46E78A0C");

                    b.HasOne("e_learning_vie.Models.User", "ApprovedByNavigation")
                        .WithMany("RequestApprovedByNavigations")
                        .HasForeignKey("ApprovedBy")
                        .HasConstraintName("FK__Requests__Approv__47DBAE45");

                    b.HasOne("e_learning_vie.Models.User", "CreatedByNavigation")
                        .WithMany("RequestCreatedByNavigations")
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("FK__Requests__Create__45F365D3");

                    b.Navigation("AcademicYear");

                    b.Navigation("ApprovedByNavigation");

                    b.Navigation("CreatedByNavigation");
                });

            modelBuilder.Entity("e_learning_vie.Models.Schedule", b =>
                {
                    b.HasOne("e_learning_vie.Models.AcademicYear", "AcademicYear")
                        .WithMany("Schedules")
                        .HasForeignKey("AcademicYearId")
                        .HasConstraintName("FK__Schedules__Acade__398D8EEE");

                    b.HasOne("e_learning_vie.Models.Class", "Class")
                        .WithMany("Schedules")
                        .HasForeignKey("ClassId")
                        .HasConstraintName("FK__Schedules__Class__36B12243");

                    b.HasOne("e_learning_vie.Models.Subject", "Subject")
                        .WithMany("Schedules")
                        .HasForeignKey("SubjectId")
                        .HasConstraintName("FK__Schedules__Subje__37A5467C");

                    b.HasOne("e_learning_vie.Models.Teacher", "Teacher")
                        .WithMany("Schedules")
                        .HasForeignKey("TeacherId")
                        .HasConstraintName("FK__Schedules__Teach__38996AB5");

                    b.Navigation("AcademicYear");

                    b.Navigation("Class");

                    b.Navigation("Subject");

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("e_learning_vie.Models.School", b =>
                {
                    b.HasOne("e_learning_vie.Models.Teacher", "Principal")
                        .WithMany("Schools")
                        .HasForeignKey("PrincipalId")
                        .HasConstraintName("FK_Schools_PrincipalID");

                    b.Navigation("Principal");
                });

            modelBuilder.Entity("e_learning_vie.Models.Student", b =>
                {
                    b.HasOne("e_learning_vie.Models.Class", "Class")
                        .WithMany("Students")
                        .HasForeignKey("ClassId")
                        .HasConstraintName("FK__Students__ClassI__32E0915F");

                    b.HasOne("e_learning_vie.Models.School", "School")
                        .WithMany("Students")
                        .HasForeignKey("SchoolId")
                        .HasConstraintName("FK__Students__School__33D4B598");

                    b.Navigation("Class");

                    b.Navigation("School");
                });

            modelBuilder.Entity("e_learning_vie.Models.StudentClassHistory", b =>
                {
                    b.HasOne("e_learning_vie.Models.AcademicYear", "AcademicYear")
                        .WithMany("StudentClassHistories")
                        .HasForeignKey("AcademicYearId")
                        .HasConstraintName("FK__StudentCl__Acade__59063A47");

                    b.HasOne("e_learning_vie.Models.Class", "Class")
                        .WithMany("StudentClassHistories")
                        .HasForeignKey("ClassId")
                        .HasConstraintName("FK__StudentCl__Class__5812160E");

                    b.HasOne("e_learning_vie.Models.Student", "Student")
                        .WithMany("StudentClassHistories")
                        .HasForeignKey("StudentId")
                        .HasConstraintName("FK__StudentCl__Stude__571DF1D5");

                    b.Navigation("AcademicYear");

                    b.Navigation("Class");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("e_learning_vie.Models.Teacher", b =>
                {
                    b.HasOne("e_learning_vie.Models.School", "School")
                        .WithMany("Teachers")
                        .HasForeignKey("SchoolId")
                        .HasConstraintName("FK__Teachers__School__2A4B4B5E");

                    b.Navigation("School");
                });

            modelBuilder.Entity("e_learning_vie.Models.User", b =>
                {
                    b.HasOne("e_learning_vie.Models.Student", "Student")
                        .WithMany("Users")
                        .HasForeignKey("StudentId")
                        .HasConstraintName("FK_Users_StudentID");

                    b.HasOne("e_learning_vie.Models.Teacher", "Teacher")
                        .WithMany("Users")
                        .HasForeignKey("TeacherId")
                        .HasConstraintName("FK_Users_TeacherID");

                    b.Navigation("Student");

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("e_learning_vie.Models.AcademicYear", b =>
                {
                    b.Navigation("Aspirations");

                    b.Navigation("Classes");

                    b.Navigation("Grades");

                    b.Navigation("Notifications");

                    b.Navigation("Quota");

                    b.Navigation("Requests");

                    b.Navigation("Schedules");

                    b.Navigation("StudentClassHistories");
                });

            modelBuilder.Entity("e_learning_vie.Models.Class", b =>
                {
                    b.Navigation("Schedules");

                    b.Navigation("StudentClassHistories");

                    b.Navigation("Students");
                });

            modelBuilder.Entity("e_learning_vie.Models.School", b =>
                {
                    b.Navigation("Aspirations");

                    b.Navigation("Classes");

                    b.Navigation("Notifications");

                    b.Navigation("Quota");

                    b.Navigation("Students");

                    b.Navigation("Teachers");
                });

            modelBuilder.Entity("e_learning_vie.Models.Student", b =>
                {
                    b.Navigation("Aspirations");

                    b.Navigation("Grades");

                    b.Navigation("StudentClassHistories");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("e_learning_vie.Models.Subject", b =>
                {
                    b.Navigation("Grades");

                    b.Navigation("Schedules");
                });

            modelBuilder.Entity("e_learning_vie.Models.Teacher", b =>
                {
                    b.Navigation("Classes");

                    b.Navigation("Schedules");

                    b.Navigation("Schools");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("e_learning_vie.Models.User", b =>
                {
                    b.Navigation("ActivityLogs");

                    b.Navigation("RequestApprovedByNavigations");

                    b.Navigation("RequestCreatedByNavigations");
                });
#pragma warning restore 612, 618
        }
    }
}
